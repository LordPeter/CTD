##################
# Decisions events
# 
# by LordPeter
##################

namespace = CTD

######################
# ranges CTD.0401-0499
######################

### Enact Edict

## Growth Incentives

province_event = {	# Province fires invisible event to be in scope, then fires player decision
	id = CTD.0401
	desc =  CTDDESC_0001		# Generic "invisible" localisation
	
	is_triggered_only = yes		# by decision
	
	hide_window = yes
	
	immediate = {
		save_event_target_as = target_edict_province	# save province
		owner = {
			character_event = {	# Give owner actual choice now
				id = CTD.0402
			}
		}
	}
}

character_event = {	# Owner is given edict choice (part 1/3)
	id = CTD.0402
	desc =  CTDDESC_0402
	picture = "GFX_evt_council"
	
	is_triggered_only = yes		# by event
	
	option = {
		name = CTDOPTA_0402	# Growth Incentive: Peasants
		# Cost depends on existing pop amount (cheaper if low pops):
		if = {
			limit = {
				event_target:target_edict_province = {
					NOT = {
						check_variable = {
							which = province_population_peasants
							value = 10
						}
					}
				}
			}
			wealth = -25
		}
		if = {
			limit = {
				event_target:target_edict_province = {
					check_variable = {
						which = province_population_peasants
						value = 10
					}
				}
			}
			wealth = -50
		}
		event_target:target_edict_province = {
			add_province_modifier = {	# Modifier hidden to avoid interface cluttering, but visible in major province modifier
				name = peasants_growth_incentive
				duration = 1825	# 5 years
				hidden = yes
			}
		}
		ai_chance = {
			factor = 1
			modifier = {	# More likely if can be grown currently
				factor = 3
				event_target:target_edict_province = {
					any_province_holding = {
						can_grow_peasants_CTD_trigger = yes
					}
				}
			}
		}
	}
	
	option = {
		name = CTDOPTB_0402	# Growth Incentive: Artisans
		custom_tooltip = {
			text = CTDTOOL_0402
		}
		event_target:target_edict_province = {
			add_province_modifier = {	# Modifier hidden to avoid interface cluttering, but visible in major province modifier
				name = artisans_growth_incentive
				duration = 1825	# 5 years
				hidden = yes
			}
		}
		ai_chance = {
			factor = 1
			modifier = {	# More likely if can be grown currently
				factor = 3
				event_target:target_edict_province = {
					any_province_holding = {
						can_grow_artisans_CTD_trigger = yes
					}
				}
			}
		}
	}
	
	option = {
		name = CTDOPTC_0402	# Growth Incentive: Merchants
		# Cost depends on existing pop amount (cheaper if low pops):
		if = {
			limit = {
				event_target:target_edict_province = {
					NOT = {
						check_variable = {
							which = province_population_merchants
							value = 6
						}
					}
				}
			}
			prestige = -12.5
			wealth = -25
		}
		if = {
			limit = {
				event_target:target_edict_province = {
					check_variable = {
						which = province_population_merchants
						value = 6
					}
				}
			}
			prestige = -25
			wealth = -50
		}
		event_target:target_edict_province = {
			add_province_modifier = {	# Modifier hidden to avoid interface cluttering, but visible in major province modifier
				name = merchants_growth_incentive
				duration = 1825	# 5 years
				hidden = yes
			}
		}
		ai_chance = {
			factor = 1
			modifier = {	# More likely if can be grown currently
				factor = 3
				event_target:target_edict_province = {
					any_province_holding = {
						can_grow_merchants_CTD_trigger = yes
					}
				}
			}
		}
	}
	
	option = {
		name = CTDOPTD_0402	# Show next options
		character_event = {
			id = CTD.0403
		}
																												# NOTE: not correct, needs additive?_modifiers... IMPORTANT
		ai_chance = {
			factor = 5	# 5-times as likely since four cycling options remain
			# modifier = {	# x3 if at least one of the later options could grow (total: 5+2=7)
				# factor = 3
				# any_province_holding = {
					# calc_true_if = {
						# amount = 1
						# can_grow_elite_CTD_trigger = yes
						# OR = {
							# can_grow_soldiers_CTD_trigger = yes
							# can_grow_patricians_CTD_trigger = yes
							# can_grow_clerics_CTD_trigger = yes
						# }
						# can_grow_scum_CTD_trigger = yes
						# will_shrink_scum_CTD_trigger = yes
					# }
				# }
			# }
			# modifier = {	# x2 if at least two of the later options could grow (total: x6)
				# factor = 3
				# any_province_holding = {
					# calc_true_if = {
						# amount = 1
						# can_grow_elite_CTD_trigger = yes
						# OR = {
							# can_grow_soldiers_CTD_trigger = yes
							# can_grow_patricians_CTD_trigger = yes
							# can_grow_clerics_CTD_trigger = yes
						# }
						# can_grow_scum_CTD_trigger = yes
						# will_shrink_scum_CTD_trigger = yes
					# }
				# }
			# }
		}
	}
}

character_event = {	# Owner is given edict choice (part 2/3)
	id = CTD.0403
	desc =  CTDDESC_0403
	picture = "GFX_evt_council"
	
	is_triggered_only = yes		# by event
	
	option = {
		name = CTDOPTA_0403	# Growth Incentive: Elite
		# Cost depends on existing pop amount (cheaper if low pops):
		if = {
			limit = {
				event_target:target_edict_province = {
					NOT = {
						check_variable = {
							which = province_population_elite
							value = 4
						}
					}
				}
			}
			prestige = -50
		}
		if = {
			limit = {
				event_target:target_edict_province = {
					check_variable = {
						which = province_population_elite
						value = 4
					}
				}
			}
			prestige = -100
		}
		event_target:target_edict_province = {
			add_province_modifier = {	# Modifier hidden to avoid interface cluttering, but visible in major province modifier
				name = elite_growth_incentive
				duration = 1825	# 5 years
				hidden = yes
			}
		}
		ai_chance = {
			factor = 1
			modifier = {	# More likely if can be grown currently
				factor = 3
				event_target:target_edict_province = {
					any_province_holding = {
						can_grow_elite_CTD_trigger = yes
					}
				}
			}
		}
	}
	
	option = {
		name = CTDOPTB_0403	# Growth Incentive: Special
		# Cost depends on existing pop amount (cheaper if low pops):
		if = {
			limit = {
				event_target:target_edict_province = {
					NOT = {
						check_variable = {
							which = province_population_special
							value = 10
						}
					}
				}
			}
			prestige = -50
		}
		if = {
			limit = {
				event_target:target_edict_province = {
					check_variable = {
						which = province_population_special
						value = 10
					}
				}
			}
			prestige = -100
		}
		event_target:target_edict_province = {
			add_province_modifier = {	# Modifier hidden to avoid interface cluttering, but visible in major province modifier
				name = special_growth_incentive
				duration = 1825	# 5 years
				hidden = yes
			}
		}
		ai_chance = {
			factor = 1
			modifier = {	# More likely if can be grown currently
				factor = 3
				event_target:target_edict_province = {
					any_province_holding = {
						OR = {
							can_grow_soldiers_CTD_trigger = yes
							can_grow_patricians_CTD_trigger = yes
							can_grow_clerics_CTD_trigger = yes
						}
					}
				}
			}
		}
	}
	
	option = {
		name = CTDOPTC_0403	# Show next options
		character_event = {
			id = CTD.0404
		}
		ai_chance = {
			factor = 3	# 3-times as likely since three cycling options remain
			modifier = {	# More likely if one of the later options can be grown currently
				factor = 3
				any_province_holding = {
					can_grow_scum_CTD_trigger = yes
				}
			}
			modifier = {	# More likely if one of the later options can be grown currently
				factor = 3
				event_target:target_edict_province = {
					any_province_holding = {
						will_shrink_scum_CTD_trigger = yes
					}
				}
			}
		}
	}
}

character_event = {	# Owner is given edict choice (part 3/3)
	id = CTD.0404
	desc =  CTDDESC_0404
	picture = "GFX_evt_council"
	
	is_triggered_only = yes		# by event
	
	option = {
		name = CTDOPTA_0404	# Growth Incentive: Scum
		# Cost depends on existing pop amount (cheaper if low pops):
		if = {
			limit = {
				event_target:target_edict_province = {
					NOT = {
						check_variable = {
							which = province_population_scum
							value = 10
						}
					}
				}
			}
			piety = -25
		}
		if = {
			limit = {
				event_target:target_edict_province = {
					check_variable = {
						which = province_population_scum
						value = 10
					}
				}
			}
			piety = -50
		}
		event_target:target_edict_province = {
			add_province_modifier = {	# Modifier hidden to avoid interface cluttering, but visible in major province modifier
				name = scum_growth_incentive
				duration = 1825	# 5 years
				hidden = yes
			}
		}
		ai_chance = {
			factor = 1
			modifier = {	# More likely if can be grown currently
				factor = 3
				event_target:target_edict_province = {
					any_province_holding = {
						can_grow_scum_CTD_trigger = yes
					}
				}
			}
		}
	}
	
	option = {
		name = CTDOPTB_0404	# Enforce Law: Scum
		# Cost depends on existing pop amount (*cheaper* if high pops!):
		if = {
			limit = {
				event_target:target_edict_province = {
					NOT = {
						check_variable = {
							which = province_population_scum
							value = 10
						}
					}
				}
			}
			wealth = -12.5
			prestige = -12.5
		}
		if = {
			limit = {
				event_target:target_edict_province = {
					check_variable = {
						which = province_population_scum
						value = 10
					}
				}
			}
			wealth = -25
			prestige = -25
		}
		event_target:target_edict_province = {
			add_province_modifier = {	# Modifier hidden to avoid interface cluttering, but visible in major province modifier
				name = enforced_law_on_scum
				duration = 1825	# 5 years
				hidden = yes
			}
		}
		ai_chance = {
			factor = 1
			modifier = {	# More likely if can be grown currently
				factor = 3
				event_target:target_edict_province = {
					any_province_holding = {
						will_shrink_scum_CTD_trigger = yes
					}
				}
			}
		}
	}
	
	option = {
		name = CTDOPTC_0404	# Do nothing
		# NOTE: Add AI blocking timer maybe?
		ai_chance = {
			factor = 1
			modifier = {	# More likely if NOTHING can be grown currently
				factor = 3
				NOT = {
					event_target:target_edict_province = {
						any_province_holding = {
							OR = {
								can_grow_peasants_CTD_trigger = yes
								can_grow_artisans_CTD_trigger = yes
								can_grow_merchants_CTD_trigger = yes
								can_grow_elite_CTD_trigger = yes
								OR = {
									can_grow_soldiers_CTD_trigger = yes
									can_grow_patricians_CTD_trigger = yes
									can_grow_clerics_CTD_trigger = yes
								}
								can_grow_scum_CTD_trigger = yes
								will_shrink_scum_CTD_trigger = yes
							}
						}
					}
				}
			}
		}
	}
	
	option = {
		name = CTDOPTD_0404	# Show next options
		trigger = {
			ai = no	# AI can not cycle back - but it can chose nothing (option above)
		}
		character_event = {
			id = CTD.0402
		}
	}
}


### Special Features

## Trade Fair

province_event = {	# Province fires invisible event to be in scope, then fires player decision
	id = CTD.0410
	desc =  CTDDESC_0001		# Generic "invisible" localisation
	
	is_triggered_only = yes		# by decision
	
	hide_window = yes
	
	immediate = {
		save_event_target_as = target_trade_fair_province	# save province
		owner = {
			character_event = {	# Give owner actual choice now
				id = CTD.0411
			}
		}
	}
}

character_event = {	# Owner is asked to confirm
	id = CTD.0411
	desc =  CTDDESC_0411
	picture = "GFX_evt_market"
	
	is_triggered_only = yes		# by event
	
	option = {	# Yes
		name = CTDOPTA_0411
		wealth = -100
		prestige = -100
		event_target:target_trade_fair_province = {
			add_province_modifier = {	# Modifier hidden to avoid interface cluttering, but visible in major province modifier
				name = feature_trade_fair
				duration = -1
				hidden = yes
			}
			# Also clear flag:
			clr_province_flag = trade_fair_decision_taken
		}
	}
	
	option = {	# No
		name = CTDOPTB_0411
		event_target:target_trade_fair_province = {
			# Clear flag:
			clr_province_flag = trade_fair_decision_taken
		}
	}
}

## Staple Right

province_event = {	# Province fires invisible event to be in scope, then fires player decision
	id = CTD.0412
	desc =  CTDDESC_0001		# Generic "invisible" localisation
	
	is_triggered_only = yes		# by decision
	
	hide_window = yes
	
	immediate = {
		save_event_target_as = target_staple_right_province	# save province
		owner = {
			character_event = {	# Give owner actual choice now
				id = CTD.0413
			}
		}
	}
}

character_event = {	# Owner is asked to confirm
	id = CTD.0413
	desc =  CTDDESC_0413
	picture = "GFX_evt_market"
	
	is_triggered_only = yes		# by event
	
	option = {	# Yes
		name = CTDOPTA_0413
		wealth = -50
		prestige = -200
		event_target:target_staple_right_province = {
			add_province_modifier = {	# Modifier hidden to avoid interface cluttering, but visible in major province modifier
				name = feature_staple_right
				duration = -1
				hidden = yes
			}
			# Also clear flag:
			clr_province_flag = staple_right_decision_taken
		}
	}
	
	option = {	# No
		name = CTDOPTB_0413
		event_target:target_staple_right_province = {
			# Clear flag:
			clr_province_flag = staple_right_decision_taken
		}
	}
}


### Send Prospectors

## Province decision fires event

province_event = {	# Ping from province, save target, set flag
	id = CTD.0420
	
	is_triggered_only = yes		# by decision
	
	hide_window = yes
	
	immediate = {
		# Save event target:
		save_event_target_as = target_prospected_province	# save province
		# Calculate prospection outcome (for now just hidden):
		random_list = {
			100 = {
				# nothing found
			}
			10 = {
				modifier = {
					factor = 0
					OR = {
						has_province_modifier = prospected_mineral_gold_ore
						has_province_flag = just_found_gold_ore
						NOT = {
							gold_ore_resource_possible_CTD_trigger = yes
						}
					}
				}
				set_province_flag = just_found_gold_ore
			}
			10 = {
				modifier = {
					factor = 0
					OR = {
						has_province_modifier = prospected_mineral_placer_gold
						has_province_flag = just_found_placer_gold
						NOT = {
							placer_gold_resource_possible_CTD_trigger = yes
						}
					}
				}
				set_province_flag = just_found_placer_gold
			}
			10 = {
				modifier = {
					factor = 0
					OR = {
						has_province_modifier = prospected_mineral_electrum
						has_province_flag = just_found_electrum
						NOT = {
							electrum_resource_possible_CTD_trigger = yes
						}
					}
				}
				set_province_flag = just_found_electrum
			}
			10 = {
				modifier = {
					factor = 0
					OR = {
						has_province_modifier = prospected_mineral_chlorargyrite
						has_province_flag = just_found_chlorargyrite
						NOT = {
							chlorargyrite_resource_possible_CTD_trigger = yes
						}
					}
				}
				set_province_flag = just_found_chlorargyrite
			}
			10 = {
				modifier = {
					factor = 0
					OR = {
						has_province_modifier = prospected_mineral_ruby_silver
						has_province_flag = just_found_ruby_silver
						NOT = {
							ruby_silver_resource_possible_CTD_trigger = yes
						}
					}
				}
				set_province_flag = just_found_ruby_silver
			}
			10 = {
				modifier = {
					factor = 0
					OR = {
						has_province_modifier = prospected_mineral_chalcopyrite
						has_province_flag = just_found_chalcopyrite
						NOT = {
							chalcopyrite_resource_possible_CTD_trigger = yes
						}
					}
				}
				set_province_flag = just_found_chalcopyrite
			}
			10 = {
				modifier = {
					factor = 0
					OR = {
						has_province_modifier = prospected_mineral_chalcolite
						has_province_flag = just_found_chalcolite
						NOT = {
							chalcolite_resource_possible_CTD_trigger = yes
						}
					}
				}
				set_province_flag = just_found_chalcolite
			}
			10 = {
				modifier = {
					factor = 0
					OR = {
						has_province_modifier = prospected_mineral_haematite
						has_province_flag = just_found_haematite
						NOT = {
							haematite_resource_possible_CTD_trigger = yes
						}
					}
				}
				set_province_flag = just_found_haematite
			}
			10 = {
				modifier = {
					factor = 0
					OR = {
						has_province_modifier = prospected_mineral_magnetite
						has_province_flag = just_found_magnetite
						NOT = {
							magnetite_resource_possible_CTD_trigger = yes
						}
					}
				}
				set_province_flag = just_found_magnetite
			}
			10 = {
				modifier = {
					factor = 0
					OR = {
						has_province_modifier = prospected_mineral_pyrite
						has_province_flag = just_found_pyrite
						NOT = {
							pyrite_resource_possible_CTD_trigger = yes
						}
					}
				}
				set_province_flag = just_found_pyrite
			}
			10 = {
				modifier = {
					factor = 0
					OR = {
						has_province_modifier = prospected_mineral_casserite
						has_province_flag = just_found_casserite
						NOT = {
							casserite_resource_possible_CTD_trigger = yes
						}
					}
				}
				set_province_flag = just_found_casserite
			}
			10 = {
				modifier = {
					factor = 0
					OR = {
						has_province_modifier = prospected_mineral_lead_glance
						has_province_flag = just_found_lead_glance
						NOT = {
							lead_glance_resource_possible_CTD_trigger = yes
						}
					}
				}
				set_province_flag = just_found_lead_glance
			}
			10 = {
				modifier = {
					factor = 0
					OR = {
						has_province_modifier = prospected_mineral_gemstones
						has_province_flag = just_found_gemstones
						NOT = {
							gemstones_resource_possible_CTD_trigger = yes
						}
					}
				}
				set_province_flag = just_found_gemstones
			}
			10 = {
				modifier = {
					factor = 0
					OR = {
						has_province_modifier = prospected_mineral_lapis_lazuli
						has_province_flag = just_found_lapis_lazuli
						NOT = {
							lapis_lazuli_resource_possible_CTD_trigger = yes
						}
					}
				}
				set_province_flag = just_found_lapis_lazuli
			}
			10 = {
				modifier = {
					factor = 0
					OR = {
						has_province_modifier = prospected_mineral_malachite
						has_province_flag = just_found_malachite
						NOT = {
							malachite_resource_possible_CTD_trigger = yes
						}
					}
				}
				set_province_flag = just_found_malachite
			}
			10 = {
				modifier = {
					factor = 0
					OR = {
						has_province_modifier = prospected_mineral_orpiment_realgar
						has_province_flag = just_found_orpiment_realgar
						NOT = {
							orpiment_realgar_resource_possible_CTD_trigger = yes
						}
					}
				}
				set_province_flag = just_found_orpiment_realgar
			}
			10 = {
				modifier = {
					factor = 0
					OR = {
						has_province_modifier = prospected_mineral_jade
						has_province_flag = just_found_jade
						NOT = {
							jade_resource_possible_CTD_trigger = yes
						}
					}
				}
				set_province_flag = just_found_jade
			}
			10 = {
				modifier = {
					factor = 0
					OR = {
						has_province_modifier = prospected_mineral_alum
						has_province_flag = just_found_alum
						NOT = {
							alum_resource_possible_CTD_trigger = yes
						}
					}
				}
				set_province_flag = just_found_alum
			}
			10 = {
				modifier = {
					factor = 0
					OR = {
						has_province_modifier = prospected_mineral_cinnabar
						has_province_flag = just_found_cinnabar
						NOT = {
							cinnabar_resource_possible_CTD_trigger = yes
						}
					}
				}
				set_province_flag = just_found_cinnabar
			}
			10 = {
				modifier = {
					factor = 0
					OR = {
						has_province_modifier = prospected_mineral_sulfur_ore
						has_province_flag = just_found_sulfur_ore
						NOT = {
							sulfur_ore_resource_possible_CTD_trigger = yes
						}
					}
				}
				set_province_flag = just_found_sulfur_ore
			}
			10 = {
				modifier = {
					factor = 0
					OR = {
						has_province_modifier = prospected_mineral_naphtha
						has_province_flag = just_found_naphtha
						NOT = {
							naphtha_resource_possible_CTD_trigger = yes
						}
					}
				}
				set_province_flag = just_found_naphtha
			}
			10 = {
				modifier = {
					factor = 0
					OR = {
						has_province_modifier = prospected_mineral_coal
						has_province_flag = just_found_coal
						NOT = {
							coal_resource_possible_CTD_trigger = yes
						}
					}
				}
				set_province_flag = just_found_coal
			}
			10 = {
				modifier = {
					factor = 0
					OR = {
						has_province_modifier = prospected_mineral_calamine
						has_province_flag = just_found_calamine
						NOT = {
							calamine_resource_possible_CTD_trigger = yes
						}
					}
				}
				set_province_flag = just_found_calamine
			}
			10 = {
				modifier = {
					factor = 0
					OR = {
						has_province_modifier = prospected_mineral_smaltite
						has_province_flag = just_found_smaltite
						NOT = {
							smaltite_resource_possible_CTD_trigger = yes
						}
					}
				}
				set_province_flag = just_found_smaltite
			}
			10 = {
				modifier = {
					factor = 0
					OR = {
						has_province_modifier = prospected_mineral_antimonit
						has_province_flag = just_found_antimonit
						NOT = {
							antimonit_resource_possible_CTD_trigger = yes
						}
					}
				}
				set_province_flag = just_found_antimonit
			}
			10 = {
				modifier = {
					factor = 0
					OR = {
						has_province_modifier = prospected_mineral_pyrolusit
						has_province_flag = just_found_pyrolusit
						NOT = {
							pyrolusit_resource_possible_CTD_trigger = yes
						}
					}
				}
				set_province_flag = just_found_pyrolusit
			}
			10 = {
				modifier = {
					factor = 0
					OR = {
						has_province_modifier = prospected_mineral_sal_ammoniac
						has_province_flag = just_found_sal_ammoniac
						NOT = {
							ammoniac_resource_possible_CTD_trigger = yes
						}
					}
				}
				set_province_flag = just_found_sal_ammoniac
			}
			10 = {
				modifier = {
					factor = 0
					OR = {
						has_province_modifier = prospected_mineral_marble
						has_province_flag = just_found_marble
						NOT = {
							marble_resource_possible_CTD_trigger = yes
						}
					}
				}
				set_province_flag = just_found_marble
			}
			10 = {
				modifier = {
					factor = 0
					OR = {
						has_province_modifier = prospected_mineral_stone
						has_province_flag = just_found_stone
						NOT = {
							stone_resource_possible_CTD_trigger = yes
						}
					}
				}
				set_province_flag = just_found_stone
			}
			10 = {
				modifier = {
					factor = 0
					OR = {
						has_province_modifier = prospected_mineral_limestone
						has_province_flag = just_found_limestone
						NOT = {
							limestone_resource_possible_CTD_trigger = yes
						}
					}
				}
				set_province_flag = just_found_limestone
			}
			10 = {
				modifier = {
					factor = 0
					OR = {
						has_province_modifier = prospected_mineral_alabaster
						has_province_flag = just_found_alabaster
						NOT = {
							alabaster_resource_possible_CTD_trigger = yes
						}
					}
				}
				set_province_flag = just_found_alabaster
			}
			10 = {
				modifier = {
					factor = 0
					OR = {
						has_province_modifier = prospected_mineral_gypsum
						has_province_flag = just_found_gypsum
						NOT = {
							gypsum_resource_possible_CTD_trigger = yes
						}
					}
				}
				set_province_flag = just_found_gypsum
			}
			10 = {
				modifier = {
					factor = 0
					OR = {
						has_province_modifier = prospected_mineral_amber
						has_province_flag = just_found_amber
						NOT = {
							amber_resource_possible_CTD_trigger = yes
						}
					}
				}
				set_province_flag = just_found_amber
			}
			10 = {
				modifier = {
					factor = 0
					OR = {
						has_province_modifier = prospected_mineral_salt
						has_province_flag = just_found_salt
						NOT = {
							salt_resource_possible_CTD_trigger = yes
						}
					}
				}
				set_province_flag = just_found_salt
			}
			10 = {
				modifier = {
					factor = 0
					OR = {
						has_province_modifier = prospected_mineral_natural_brine
						has_province_flag = just_found_natural_brine
						NOT = {
							brine_resource_possible_CTD_trigger = yes
						}
					}
				}
				set_province_flag = just_found_natural_brine
			}
			10 = {
				modifier = {
					factor = 0
					OR = {
						has_province_modifier = prospected_mineral_soda
						has_province_flag = just_found_soda
						NOT = {
							soda_resource_possible_CTD_trigger = yes
						}
					}
				}
				set_province_flag = just_found_soda
			}
			10 = {
				modifier = {
					factor = 0
					OR = {
						has_province_modifier = prospected_mineral_sand
						has_province_flag = just_found_sand
						NOT = {
							sand_resource_possible_CTD_trigger = yes
						}
					}
				}
				set_province_flag = just_found_sand
			}
			10 = {
				modifier = {
					factor = 0
					OR = {
						has_province_modifier = prospected_mineral_clay
						has_province_flag = just_found_clay
						NOT = {
							clay_resource_possible_CTD_trigger = yes
						}
					}
				}
				set_province_flag = just_found_clay
			}
			10 = {
				modifier = {
					factor = 0
					OR = {
						has_province_modifier = prospected_mineral_borax
						has_province_flag = just_found_borax
						NOT = {
							borax_resource_possible_CTD_trigger = yes
						}
					}
				}
				set_province_flag = just_found_borax
			}
		}
		# Only if still not at maximum, 2nd chance
		if = {
			limit = {
				NOT = {
					has_max_prospected_minerals_CTD_trigger = yes
				}
			}
			random_list = {
				100 = {
					# nothing found
				}
				10 = {
					modifier = {
						factor = 0
						OR = {
							has_province_modifier = prospected_mineral_gold_ore
							has_province_flag = just_found_gold_ore
							NOT = {
								gold_ore_resource_possible_CTD_trigger = yes
							}
						}
					}
					set_province_flag = just_found_gold_ore
				}
				10 = {
					modifier = {
						factor = 0
						OR = {
							has_province_modifier = prospected_mineral_placer_gold
							has_province_flag = just_found_placer_gold
							NOT = {
								placer_gold_resource_possible_CTD_trigger = yes
							}
						}
					}
					set_province_flag = just_found_placer_gold
				}
				10 = {
					modifier = {
						factor = 0
						OR = {
							has_province_modifier = prospected_mineral_electrum
							has_province_flag = just_found_electrum
							NOT = {
								electrum_resource_possible_CTD_trigger = yes
							}
						}
					}
					set_province_flag = just_found_electrum
				}
				10 = {
					modifier = {
						factor = 0
						OR = {
							has_province_modifier = prospected_mineral_chlorargyrite
							has_province_flag = just_found_chlorargyrite
							NOT = {
								chlorargyrite_resource_possible_CTD_trigger = yes
							}
						}
					}
					set_province_flag = just_found_chlorargyrite
				}
				10 = {
					modifier = {
						factor = 0
						OR = {
							has_province_modifier = prospected_mineral_ruby_silver
							has_province_flag = just_found_ruby_silver
							NOT = {
								ruby_silver_resource_possible_CTD_trigger = yes
							}
						}
					}
					set_province_flag = just_found_ruby_silver
				}
				10 = {
					modifier = {
						factor = 0
						OR = {
							has_province_modifier = prospected_mineral_chalcopyrite
							has_province_flag = just_found_chalcopyrite
							NOT = {
								chalcopyrite_resource_possible_CTD_trigger = yes
							}
						}
					}
					set_province_flag = just_found_chalcopyrite
				}
				10 = {
					modifier = {
						factor = 0
						OR = {
							has_province_modifier = prospected_mineral_chalcolite
							has_province_flag = just_found_chalcolite
							NOT = {
								chalcolite_resource_possible_CTD_trigger = yes
							}
						}
					}
					set_province_flag = just_found_chalcolite
				}
				10 = {
					modifier = {
						factor = 0
						OR = {
							has_province_modifier = prospected_mineral_haematite
							has_province_flag = just_found_haematite
							NOT = {
								haematite_resource_possible_CTD_trigger = yes
							}
						}
					}
					set_province_flag = just_found_haematite
				}
				10 = {
					modifier = {
						factor = 0
						OR = {
							has_province_modifier = prospected_mineral_magnetite
							has_province_flag = just_found_magnetite
							NOT = {
								magnetite_resource_possible_CTD_trigger = yes
							}
						}
					}
					set_province_flag = just_found_magnetite
				}
				10 = {
					modifier = {
						factor = 0
						OR = {
							has_province_modifier = prospected_mineral_pyrite
							has_province_flag = just_found_pyrite
							NOT = {
								pyrite_resource_possible_CTD_trigger = yes
							}
						}
					}
					set_province_flag = just_found_pyrite
				}
				10 = {
					modifier = {
						factor = 0
						OR = {
							has_province_modifier = prospected_mineral_casserite
							has_province_flag = just_found_casserite
							NOT = {
								casserite_resource_possible_CTD_trigger = yes
							}
						}
					}
					set_province_flag = just_found_casserite
				}
				10 = {
					modifier = {
						factor = 0
						OR = {
							has_province_modifier = prospected_mineral_lead_glance
							has_province_flag = just_found_lead_glance
							NOT = {
								lead_glance_resource_possible_CTD_trigger = yes
							}
						}
					}
					set_province_flag = just_found_lead_glance
				}
				10 = {
					modifier = {
						factor = 0
						OR = {
							has_province_modifier = prospected_mineral_gemstones
							has_province_flag = just_found_gemstones
							NOT = {
								gemstones_resource_possible_CTD_trigger = yes
							}
						}
					}
					set_province_flag = just_found_gemstones
				}
				10 = {
					modifier = {
						factor = 0
						OR = {
							has_province_modifier = prospected_mineral_lapis_lazuli
							has_province_flag = just_found_lapis_lazuli
							NOT = {
								lapis_lazuli_resource_possible_CTD_trigger = yes
							}
						}
					}
					set_province_flag = just_found_lapis_lazuli
				}
				10 = {
					modifier = {
						factor = 0
						OR = {
							has_province_modifier = prospected_mineral_malachite
							has_province_flag = just_found_malachite
							NOT = {
								malachite_resource_possible_CTD_trigger = yes
							}
						}
					}
					set_province_flag = just_found_malachite
				}
				10 = {
					modifier = {
						factor = 0
						OR = {
							has_province_modifier = prospected_mineral_orpiment_realgar
							has_province_flag = just_found_orpiment_realgar
							NOT = {
								orpiment_realgar_resource_possible_CTD_trigger = yes
							}
						}
					}
					set_province_flag = just_found_orpiment_realgar
				}
				10 = {
					modifier = {
						factor = 0
						OR = {
							has_province_modifier = prospected_mineral_jade
							has_province_flag = just_found_jade
							NOT = {
								jade_resource_possible_CTD_trigger = yes
							}
						}
					}
					set_province_flag = just_found_jade
				}
				10 = {
					modifier = {
						factor = 0
						OR = {
							has_province_modifier = prospected_mineral_alum
							has_province_flag = just_found_alum
							NOT = {
								alum_resource_possible_CTD_trigger = yes
							}
						}
					}
					set_province_flag = just_found_alum
				}
				10 = {
					modifier = {
						factor = 0
						OR = {
							has_province_modifier = prospected_mineral_cinnabar
							has_province_flag = just_found_cinnabar
							NOT = {
								cinnabar_resource_possible_CTD_trigger = yes
							}
						}
					}
					set_province_flag = just_found_cinnabar
				}
				10 = {
					modifier = {
						factor = 0
						OR = {
							has_province_modifier = prospected_mineral_sulfur_ore
							has_province_flag = just_found_sulfur_ore
							NOT = {
								sulfur_ore_resource_possible_CTD_trigger = yes
							}
						}
					}
					set_province_flag = just_found_sulfur_ore
				}
				10 = {
					modifier = {
						factor = 0
						OR = {
							has_province_modifier = prospected_mineral_naphtha
							has_province_flag = just_found_naphtha
							NOT = {
								naphtha_resource_possible_CTD_trigger = yes
							}
						}
					}
					set_province_flag = just_found_naphtha
				}
				10 = {
					modifier = {
						factor = 0
						OR = {
							has_province_modifier = prospected_mineral_coal
							has_province_flag = just_found_coal
							NOT = {
								coal_resource_possible_CTD_trigger = yes
							}
						}
					}
					set_province_flag = just_found_coal
				}
				10 = {
					modifier = {
						factor = 0
						OR = {
							has_province_modifier = prospected_mineral_calamine
							has_province_flag = just_found_calamine
							NOT = {
								calamine_resource_possible_CTD_trigger = yes
							}
						}
					}
					set_province_flag = just_found_calamine
				}
				10 = {
					modifier = {
						factor = 0
						OR = {
							has_province_modifier = prospected_mineral_smaltite
							has_province_flag = just_found_smaltite
							NOT = {
								smaltite_resource_possible_CTD_trigger = yes
							}
						}
					}
					set_province_flag = just_found_smaltite
				}
				10 = {
					modifier = {
						factor = 0
						OR = {
							has_province_modifier = prospected_mineral_antimonit
							has_province_flag = just_found_antimonit
							NOT = {
								antimonit_resource_possible_CTD_trigger = yes
							}
						}
					}
					set_province_flag = just_found_antimonit
				}
				10 = {
					modifier = {
						factor = 0
						OR = {
							has_province_modifier = prospected_mineral_pyrolusit
							has_province_flag = just_found_pyrolusit
							NOT = {
								pyrolusit_resource_possible_CTD_trigger = yes
							}
						}
					}
					set_province_flag = just_found_pyrolusit
				}
				10 = {
					modifier = {
						factor = 0
						OR = {
							has_province_modifier = prospected_mineral_sal_ammoniac
							has_province_flag = just_found_sal_ammoniac
							NOT = {
								ammoniac_resource_possible_CTD_trigger = yes
							}
						}
					}
					set_province_flag = just_found_sal_ammoniac
				}
				10 = {
					modifier = {
						factor = 0
						OR = {
							has_province_modifier = prospected_mineral_marble
							has_province_flag = just_found_marble
							NOT = {
								marble_resource_possible_CTD_trigger = yes
							}
						}
					}
					set_province_flag = just_found_marble
				}
				10 = {
					modifier = {
						factor = 0
						OR = {
							has_province_modifier = prospected_mineral_stone
							has_province_flag = just_found_stone
							NOT = {
								stone_resource_possible_CTD_trigger = yes
							}
						}
					}
					set_province_flag = just_found_stone
				}
				10 = {
					modifier = {
						factor = 0
						OR = {
							has_province_modifier = prospected_mineral_limestone
							has_province_flag = just_found_limestone
							NOT = {
								limestone_resource_possible_CTD_trigger = yes
							}
						}
					}
					set_province_flag = just_found_limestone
				}
				10 = {
					modifier = {
						factor = 0
						OR = {
							has_province_modifier = prospected_mineral_alabaster
							has_province_flag = just_found_alabaster
							NOT = {
								alabaster_resource_possible_CTD_trigger = yes
							}
						}
					}
					set_province_flag = just_found_alabaster
				}
				10 = {
					modifier = {
						factor = 0
						OR = {
							has_province_modifier = prospected_mineral_gypsum
							has_province_flag = just_found_gypsum
							NOT = {
								gypsum_resource_possible_CTD_trigger = yes
							}
						}
					}
					set_province_flag = just_found_gypsum
				}
				10 = {
					modifier = {
						factor = 0
						OR = {
							has_province_modifier = prospected_mineral_amber
							has_province_flag = just_found_amber
							NOT = {
								amber_resource_possible_CTD_trigger = yes
							}
						}
					}
					set_province_flag = just_found_amber
				}
				10 = {
					modifier = {
						factor = 0
						OR = {
							has_province_modifier = prospected_mineral_salt
							has_province_flag = just_found_salt
							NOT = {
								salt_resource_possible_CTD_trigger = yes
							}
						}
					}
					set_province_flag = just_found_salt
				}
				10 = {
					modifier = {
						factor = 0
						OR = {
							has_province_modifier = prospected_mineral_natural_brine
							has_province_flag = just_found_natural_brine
							NOT = {
								brine_resource_possible_CTD_trigger = yes
							}
						}
					}
					set_province_flag = just_found_natural_brine
				}
				10 = {
					modifier = {
						factor = 0
						OR = {
							has_province_modifier = prospected_mineral_soda
							has_province_flag = just_found_soda
							NOT = {
								soda_resource_possible_CTD_trigger = yes
							}
						}
					}
					set_province_flag = just_found_soda
				}
				10 = {
					modifier = {
						factor = 0
						OR = {
							has_province_modifier = prospected_mineral_sand
							has_province_flag = just_found_sand
							NOT = {
								sand_resource_possible_CTD_trigger = yes
							}
						}
					}
					set_province_flag = just_found_sand
				}
				10 = {
					modifier = {
						factor = 0
						OR = {
							has_province_modifier = prospected_mineral_clay
							has_province_flag = just_found_clay
							NOT = {
								clay_resource_possible_CTD_trigger = yes
							}
						}
					}
					set_province_flag = just_found_clay
				}
				10 = {
					modifier = {
						factor = 0
						OR = {
							has_province_modifier = prospected_mineral_borax
							has_province_flag = just_found_borax
							NOT = {
								borax_resource_possible_CTD_trigger = yes
							}
						}
					}
					set_province_flag = just_found_borax
				}
			}
		}
		# Only if still not at maximum, 3rd chance
		if = {
			limit = {
				NOT = {
					has_max_prospected_minerals_CTD_trigger = yes
				}
			}
			random_list = {
				100 = {
					# nothing found
				}
				10 = {
					modifier = {
						factor = 0
						OR = {
							has_province_modifier = prospected_mineral_gold_ore
							has_province_flag = just_found_gold_ore
							NOT = {
								gold_ore_resource_possible_CTD_trigger = yes
							}
						}
					}
					set_province_flag = just_found_gold_ore
				}
				10 = {
					modifier = {
						factor = 0
						OR = {
							has_province_modifier = prospected_mineral_placer_gold
							has_province_flag = just_found_placer_gold
							NOT = {
								placer_gold_resource_possible_CTD_trigger = yes
							}
						}
					}
					set_province_flag = just_found_placer_gold
				}
				10 = {
					modifier = {
						factor = 0
						OR = {
							has_province_modifier = prospected_mineral_electrum
							has_province_flag = just_found_electrum
							NOT = {
								electrum_resource_possible_CTD_trigger = yes
							}
						}
					}
					set_province_flag = just_found_electrum
				}
				10 = {
					modifier = {
						factor = 0
						OR = {
							has_province_modifier = prospected_mineral_chlorargyrite
							has_province_flag = just_found_chlorargyrite
							NOT = {
								chlorargyrite_resource_possible_CTD_trigger = yes
							}
						}
					}
					set_province_flag = just_found_chlorargyrite
				}
				10 = {
					modifier = {
						factor = 0
						OR = {
							has_province_modifier = prospected_mineral_ruby_silver
							has_province_flag = just_found_ruby_silver
							NOT = {
								ruby_silver_resource_possible_CTD_trigger = yes
							}
						}
					}
					set_province_flag = just_found_ruby_silver
				}
				10 = {
					modifier = {
						factor = 0
						OR = {
							has_province_modifier = prospected_mineral_chalcopyrite
							has_province_flag = just_found_chalcopyrite
							NOT = {
								chalcopyrite_resource_possible_CTD_trigger = yes
							}
						}
					}
					set_province_flag = just_found_chalcopyrite
				}
				10 = {
					modifier = {
						factor = 0
						OR = {
							has_province_modifier = prospected_mineral_chalcolite
							has_province_flag = just_found_chalcolite
							NOT = {
								chalcolite_resource_possible_CTD_trigger = yes
							}
						}
					}
					set_province_flag = just_found_chalcolite
				}
				10 = {
					modifier = {
						factor = 0
						OR = {
							has_province_modifier = prospected_mineral_haematite
							has_province_flag = just_found_haematite
							NOT = {
								haematite_resource_possible_CTD_trigger = yes
							}
						}
					}
					set_province_flag = just_found_haematite
				}
				10 = {
					modifier = {
						factor = 0
						OR = {
							has_province_modifier = prospected_mineral_magnetite
							has_province_flag = just_found_magnetite
							NOT = {
								magnetite_resource_possible_CTD_trigger = yes
							}
						}
					}
					set_province_flag = just_found_magnetite
				}
				10 = {
					modifier = {
						factor = 0
						OR = {
							has_province_modifier = prospected_mineral_pyrite
							has_province_flag = just_found_pyrite
							NOT = {
								pyrite_resource_possible_CTD_trigger = yes
							}
						}
					}
					set_province_flag = just_found_pyrite
				}
				10 = {
					modifier = {
						factor = 0
						OR = {
							has_province_modifier = prospected_mineral_casserite
							has_province_flag = just_found_casserite
							NOT = {
								casserite_resource_possible_CTD_trigger = yes
							}
						}
					}
					set_province_flag = just_found_casserite
				}
				10 = {
					modifier = {
						factor = 0
						OR = {
							has_province_modifier = prospected_mineral_lead_glance
							has_province_flag = just_found_lead_glance
							NOT = {
								lead_glance_resource_possible_CTD_trigger = yes
							}
						}
					}
					set_province_flag = just_found_lead_glance
				}
				10 = {
					modifier = {
						factor = 0
						OR = {
							has_province_modifier = prospected_mineral_gemstones
							has_province_flag = just_found_gemstones
							NOT = {
								gemstones_resource_possible_CTD_trigger = yes
							}
						}
					}
					set_province_flag = just_found_gemstones
				}
				10 = {
					modifier = {
						factor = 0
						OR = {
							has_province_modifier = prospected_mineral_lapis_lazuli
							has_province_flag = just_found_lapis_lazuli
							NOT = {
								lapis_lazuli_resource_possible_CTD_trigger = yes
							}
						}
					}
					set_province_flag = just_found_lapis_lazuli
				}
				10 = {
					modifier = {
						factor = 0
						OR = {
							has_province_modifier = prospected_mineral_malachite
							has_province_flag = just_found_malachite
							NOT = {
								malachite_resource_possible_CTD_trigger = yes
							}
						}
					}
					set_province_flag = just_found_malachite
				}
				10 = {
					modifier = {
						factor = 0
						OR = {
							has_province_modifier = prospected_mineral_orpiment_realgar
							has_province_flag = just_found_orpiment_realgar
							NOT = {
								orpiment_realgar_resource_possible_CTD_trigger = yes
							}
						}
					}
					set_province_flag = just_found_orpiment_realgar
				}
				10 = {
					modifier = {
						factor = 0
						OR = {
							has_province_modifier = prospected_mineral_jade
							has_province_flag = just_found_jade
							NOT = {
								jade_resource_possible_CTD_trigger = yes
							}
						}
					}
					set_province_flag = just_found_jade
				}
				10 = {
					modifier = {
						factor = 0
						OR = {
							has_province_modifier = prospected_mineral_alum
							has_province_flag = just_found_alum
							NOT = {
								alum_resource_possible_CTD_trigger = yes
							}
						}
					}
					set_province_flag = just_found_alum
				}
				10 = {
					modifier = {
						factor = 0
						OR = {
							has_province_modifier = prospected_mineral_cinnabar
							has_province_flag = just_found_cinnabar
							NOT = {
								cinnabar_resource_possible_CTD_trigger = yes
							}
						}
					}
					set_province_flag = just_found_cinnabar
				}
				10 = {
					modifier = {
						factor = 0
						OR = {
							has_province_modifier = prospected_mineral_sulfur_ore
							has_province_flag = just_found_sulfur_ore
							NOT = {
								sulfur_ore_resource_possible_CTD_trigger = yes
							}
						}
					}
					set_province_flag = just_found_sulfur_ore
				}
				10 = {
					modifier = {
						factor = 0
						OR = {
							has_province_modifier = prospected_mineral_naphtha
							has_province_flag = just_found_naphtha
							NOT = {
								naphtha_resource_possible_CTD_trigger = yes
							}
						}
					}
					set_province_flag = just_found_naphtha
				}
				10 = {
					modifier = {
						factor = 0
						OR = {
							has_province_modifier = prospected_mineral_coal
							has_province_flag = just_found_coal
							NOT = {
								coal_resource_possible_CTD_trigger = yes
							}
						}
					}
					set_province_flag = just_found_coal
				}
				10 = {
					modifier = {
						factor = 0
						OR = {
							has_province_modifier = prospected_mineral_calamine
							has_province_flag = just_found_calamine
							NOT = {
								calamine_resource_possible_CTD_trigger = yes
							}
						}
					}
					set_province_flag = just_found_calamine
				}
				10 = {
					modifier = {
						factor = 0
						OR = {
							has_province_modifier = prospected_mineral_smaltite
							has_province_flag = just_found_smaltite
							NOT = {
								smaltite_resource_possible_CTD_trigger = yes
							}
						}
					}
					set_province_flag = just_found_smaltite
				}
				10 = {
					modifier = {
						factor = 0
						OR = {
							has_province_modifier = prospected_mineral_antimonit
							has_province_flag = just_found_antimonit
							NOT = {
								antimonit_resource_possible_CTD_trigger = yes
							}
						}
					}
					set_province_flag = just_found_antimonit
				}
				10 = {
					modifier = {
						factor = 0
						OR = {
							has_province_modifier = prospected_mineral_pyrolusit
							has_province_flag = just_found_pyrolusit
							NOT = {
								pyrolusit_resource_possible_CTD_trigger = yes
							}
						}
					}
					set_province_flag = just_found_pyrolusit
				}
				10 = {
					modifier = {
						factor = 0
						OR = {
							has_province_modifier = prospected_mineral_sal_ammoniac
							has_province_flag = just_found_sal_ammoniac
							NOT = {
								ammoniac_resource_possible_CTD_trigger = yes
							}
						}
					}
					set_province_flag = just_found_sal_ammoniac
				}
				10 = {
					modifier = {
						factor = 0
						OR = {
							has_province_modifier = prospected_mineral_marble
							has_province_flag = just_found_marble
							NOT = {
								marble_resource_possible_CTD_trigger = yes
							}
						}
					}
					set_province_flag = just_found_marble
				}
				10 = {
					modifier = {
						factor = 0
						OR = {
							has_province_modifier = prospected_mineral_stone
							has_province_flag = just_found_stone
							NOT = {
								stone_resource_possible_CTD_trigger = yes
							}
						}
					}
					set_province_flag = just_found_stone
				}
				10 = {
					modifier = {
						factor = 0
						OR = {
							has_province_modifier = prospected_mineral_limestone
							has_province_flag = just_found_limestone
							NOT = {
								limestone_resource_possible_CTD_trigger = yes
							}
						}
					}
					set_province_flag = just_found_limestone
				}
				10 = {
					modifier = {
						factor = 0
						OR = {
							has_province_modifier = prospected_mineral_alabaster
							has_province_flag = just_found_alabaster
							NOT = {
								alabaster_resource_possible_CTD_trigger = yes
							}
						}
					}
					set_province_flag = just_found_alabaster
				}
				10 = {
					modifier = {
						factor = 0
						OR = {
							has_province_modifier = prospected_mineral_gypsum
							has_province_flag = just_found_gypsum
							NOT = {
								gypsum_resource_possible_CTD_trigger = yes
							}
						}
					}
					set_province_flag = just_found_gypsum
				}
				10 = {
					modifier = {
						factor = 0
						OR = {
							has_province_modifier = prospected_mineral_amber
							has_province_flag = just_found_amber
							NOT = {
								amber_resource_possible_CTD_trigger = yes
							}
						}
					}
					set_province_flag = just_found_amber
				}
				10 = {
					modifier = {
						factor = 0
						OR = {
							has_province_modifier = prospected_mineral_salt
							has_province_flag = just_found_salt
							NOT = {
								salt_resource_possible_CTD_trigger = yes
							}
						}
					}
					set_province_flag = just_found_salt
				}
				10 = {
					modifier = {
						factor = 0
						OR = {
							has_province_modifier = prospected_mineral_natural_brine
							has_province_flag = just_found_natural_brine
							NOT = {
								brine_resource_possible_CTD_trigger = yes
							}
						}
					}
					set_province_flag = just_found_natural_brine
				}
				10 = {
					modifier = {
						factor = 0
						OR = {
							has_province_modifier = prospected_mineral_soda
							has_province_flag = just_found_soda
							NOT = {
								soda_resource_possible_CTD_trigger = yes
							}
						}
					}
					set_province_flag = just_found_soda
				}
				10 = {
					modifier = {
						factor = 0
						OR = {
							has_province_modifier = prospected_mineral_sand
							has_province_flag = just_found_sand
							NOT = {
								sand_resource_possible_CTD_trigger = yes
							}
						}
					}
					set_province_flag = just_found_sand
				}
				10 = {
					modifier = {
						factor = 0
						OR = {
							has_province_modifier = prospected_mineral_clay
							has_province_flag = just_found_clay
							NOT = {
								clay_resource_possible_CTD_trigger = yes
							}
						}
					}
					set_province_flag = just_found_clay
				}
				10 = {
					modifier = {
						factor = 0
						OR = {
							has_province_modifier = prospected_mineral_borax
							has_province_flag = just_found_borax
							NOT = {
								borax_resource_possible_CTD_trigger = yes
							}
						}
					}
					set_province_flag = just_found_borax
				}
			}
		}
		# Ping to owner:
		owner = {
			character_event = {	# Owner presented with results
				id = CTD.0421
				days = 14	# prospecting takes at least a fortnight
				random = 14	# may or may not take longer
			}
		}
	}
}

character_event = {	# Owner gets shown results (after they are calculated)
	id = CTD.0421
	desc =  CTDDESC_0421
	picture = "GFX_evt_medieval_map"
	
	is_triggered_only = yes		# by event
	
	# Onwer accepts results
	option = {
		name = CTDOPTA_0421
		event_target:target_prospected_province = {
			trigger_switch = {	# Decides which modifier to apply based on flag set before
				on_trigger = has_province_flag
				just_found_gold_ore = {
					add_province_modifier = {
						name = prospected_mineral_gold_ore
						duration = 3650	# stays for 10 years (afterwards location is assumed forgotten)
					}
				}
				just_found_placer_gold = {
					add_province_modifier = {
						name = prospected_mineral_placer_gold
						duration = 3650	# stays for 10 years (afterwards location is assumed forgotten)
					}
				}
				just_found_electrum = {
					add_province_modifier = {
						name = prospected_mineral_electrum
						duration = 3650	# stays for 10 years (afterwards location is assumed forgotten)
					}
				}
				just_found_chlorargyrite = {
					add_province_modifier = {
						name = prospected_mineral_chlorargyrite
						duration = 3650	# stays for 10 years (afterwards location is assumed forgotten)
					}
				}
				just_found_ruby_silver = {
					add_province_modifier = {
						name = prospected_mineral_ruby_silver
						duration = 3650	# stays for 10 years (afterwards location is assumed forgotten)
					}
				}
				just_found_chalcopyrite = {
					add_province_modifier = {
						name = prospected_mineral_chalcopyrite
						duration = 3650	# stays for 10 years (afterwards location is assumed forgotten)
					}
				}
				just_found_chalcolite = {
					add_province_modifier = {
						name = prospected_mineral_chalcolite
						duration = 3650	# stays for 10 years (afterwards location is assumed forgotten)
					}
				}
				just_found_haematite = {
					add_province_modifier = {
						name = prospected_mineral_haematite
						duration = 3650	# stays for 10 years (afterwards location is assumed forgotten)
					}
				}
				just_found_magnetite = {
					add_province_modifier = {
						name = prospected_mineral_magnetite
						duration = 3650	# stays for 10 years (afterwards location is assumed forgotten)
					}
				}
				just_found_pyrite = {
					add_province_modifier = {
						name = prospected_mineral_pyrite
						duration = 3650	# stays for 10 years (afterwards location is assumed forgotten)
					}
				}
				just_found_casserite = {
					add_province_modifier = {
						name = prospected_mineral_casserite
						duration = 3650	# stays for 10 years (afterwards location is assumed forgotten)
					}
				}
				just_found_lead_glance = {
					add_province_modifier = {
						name = prospected_mineral_lead_glance
						duration = 3650	# stays for 10 years (afterwards location is assumed forgotten)
					}
				}
				just_found_gemstones = {
					add_province_modifier = {
						name = prospected_mineral_gemstones
						duration = 3650	# stays for 10 years (afterwards location is assumed forgotten)
					}
				}
				just_found_lapis_lazuli = {
					add_province_modifier = {
						name = prospected_mineral_lapis_lazuli
						duration = 3650	# stays for 10 years (afterwards location is assumed forgotten)
					}
				}
				just_found_malachite = {
					add_province_modifier = {
						name = prospected_mineral_malachite
						duration = 3650	# stays for 10 years (afterwards location is assumed forgotten)
					}
				}
				just_found_orpiment_realgar = {
					add_province_modifier = {
						name = prospected_mineral_orpiment_realgar
						duration = 3650	# stays for 10 years (afterwards location is assumed forgotten)
					}
				}
				just_found_jade = {
					add_province_modifier = {
						name = prospected_mineral_jade
						duration = 3650	# stays for 10 years (afterwards location is assumed forgotten)
					}
				}
				just_found_alum = {
					add_province_modifier = {
						name = prospected_mineral_alum
						duration = 3650	# stays for 10 years (afterwards location is assumed forgotten)
					}
				}
				just_found_cinnabar = {
					add_province_modifier = {
						name = prospected_mineral_cinnabar
						duration = 3650	# stays for 10 years (afterwards location is assumed forgotten)
					}
				}
				just_found_sulfur_ore = {
					add_province_modifier = {
						name = prospected_mineral_sulfur_ore
						duration = 3650	# stays for 10 years (afterwards location is assumed forgotten)
					}
				}
				just_found_naphtha = {
					add_province_modifier = {
						name = prospected_mineral_naphtha
						duration = 3650	# stays for 10 years (afterwards location is assumed forgotten)
					}
				}
				just_found_coal = {
					add_province_modifier = {
						name = prospected_mineral_coal
						duration = 3650	# stays for 10 years (afterwards location is assumed forgotten)
					}
				}
				just_found_calamine = {
					add_province_modifier = {
						name = prospected_mineral_calamine
						duration = 3650	# stays for 10 years (afterwards location is assumed forgotten)
					}
				}
				just_found_smaltite = {
					add_province_modifier = {
						name = prospected_mineral_smaltite
						duration = 3650	# stays for 10 years (afterwards location is assumed forgotten)
					}
				}
				just_found_antimonite = {
					add_province_modifier = {
						name = prospected_mineral_antimonite
						duration = 3650	# stays for 10 years (afterwards location is assumed forgotten)
					}
				}
				just_found_pyrolysit = {
					add_province_modifier = {
						name = prospected_mineral_pyrolysit
						duration = 3650	# stays for 10 years (afterwards location is assumed forgotten)
					}
				}
				just_found_sal_ammoniac = {
					add_province_modifier = {
						name = prospected_mineral_sal_ammoniac
						duration = 3650	# stays for 10 years (afterwards location is assumed forgotten)
					}
				}
				just_found_marble = {
					add_province_modifier = {
						name = prospected_mineral_marble
						duration = 3650	# stays for 10 years (afterwards location is assumed forgotten)
					}
				}
				just_found_stone = {
					add_province_modifier = {
						name = prospected_mineral_stone
						duration = 3650	# stays for 10 years (afterwards location is assumed forgotten)
					}
				}
				just_found_limestone = {
					add_province_modifier = {
						name = prospected_mineral_limestone
						duration = 3650	# stays for 10 years (afterwards location is assumed forgotten)
					}
				}
				just_found_alabaster = {
					add_province_modifier = {
						name = prospected_mineral_alabaster
						duration = 3650	# stays for 10 years (afterwards location is assumed forgotten)
					}
				}
				just_found_gypsum = {
					add_province_modifier = {
						name = prospected_mineral_gypsum
						duration = 3650	# stays for 10 years (afterwards location is assumed forgotten)
					}
				}
				just_found_amber = {
					add_province_modifier = {
						name = prospected_mineral_amber
						duration = 3650	# stays for 10 years (afterwards location is assumed forgotten)
					}
				}
				just_found_salt = {
					add_province_modifier = {
						name = prospected_mineral_salt
						duration = 3650	# stays for 10 years (afterwards location is assumed forgotten)
					}
				}
				just_found_natural_brine = {
					add_province_modifier = {
						name = prospected_mineral_natural_brine
						duration = 3650	# stays for 10 years (afterwards location is assumed forgotten)
					}
				}
				just_found_soda = {
					add_province_modifier = {
						name = prospected_mineral_soda
						duration = 3650	# stays for 10 years (afterwards location is assumed forgotten)
					}
				}
				just_found_sand = {
					add_province_modifier = {
						name = prospected_mineral_sand
						duration = 3650	# stays for 10 years (afterwards location is assumed forgotten)
					}
				}
				just_found_clay = {
					add_province_modifier = {
						name = prospected_mineral_clay
						duration = 3650	# stays for 10 years (afterwards location is assumed forgotten)
					}
				}
				just_found_borax = {
					add_province_modifier = {
						name = prospected_mineral_borax
						duration = 3650	# stays for 10 years (afterwards location is assumed forgotten)
					}
				}
			}
		}
	}
	
	# Angry responses: give back a bit of gold or prestige, removes prospected results but also disables decision on any province for a while
	# Wroth, scare away
	option = {
		name = CTDOPTB_0421
		trigger = {
			AND = {
				trait = wroth
				NOT = {
					# Never possible with content trait
					trait = content
				}
			}
		}
		tooltip_info = wroth
		# Gives back half of gold & a bit prestige
		wealth = 25
		prestige = 10
		add_character_modifier = {
			name = scared_off_prospectors
			duration = 730	# decision disabled for 2 years, anywhere in demesne
		}
	}
	# Stubborn, ignore unwanted results
	option = {
		name = CTDOPTC_0421
		trigger = {
			AND = {
				NOR = {
					trait = wroth
					# Never possible with content trait
					trait = content
				}
				trait = stubborn
			}
		}
		tooltip_info = stubborn
		# Gives back a bit of gold
		wealth = 10
		add_character_modifier = {
			name = scared_off_prospectors
			duration = 365	# decision disabled for 1 year, anywhere in demesne
		}
	}
	# Greedy, wanted gold or other precious things
	option = {
		name = CTDOPTD_0421
		trigger = {
			AND = {
				NOR = {
					trait = wroth
					trait = stubborn
					# Never possible with content trait
					trait = content
				}
				trait = greedy
				event_target:target_prospected_province = {	# province must not have any preciosu things prospected
					NOR = {
						has_province_flag = just_found_gold_ore
						has_province_flag = just_found_placer_gold
						has_province_flag = just_found_electrum
						has_province_flag = just_found_chlorargyrite
						has_province_flag = just_found_ruby_silver
						has_province_flag = just_found_lead_glance
						has_province_flag = just_found_gemstones
						has_province_flag = just_found_lapis_lazuli
						has_province_flag = just_found_malachite
						has_province_flag = just_found_orpiment_realgar
						has_province_flag = just_found_jade
						has_province_flag = just_found_marble
						has_province_flag = just_found_alabaster
						has_province_flag = just_found_amber
					}
				}
			}
		}
		tooltip_info = greedy
		# Gives back half of gold
		wealth = 25
		add_character_modifier = {
			name = scared_off_prospectors
			duration = 365	# decision disabled for 1 year, anywhere in demesne
		}
	}
	# Arbitrary, simply wanted different results & seizes back money
	option = {
		name = CTDOPTE_0421
		trigger = {
			AND = {
				NOR = {
					trait = wroth
					trait = stubborn
					trait = greedy
					# Never possible with content trait
					trait = content
				}
				trait = arbitrary
			}
		}
		tooltip_info = arbitrary
		# Gives back most of gold at prestige hit
		wealth = 40
		scaled_prestige = {	# 5% of annual prestige gain
			value = -0.05
			min = -100	# NOTE: Am I guessing correctly that the logic is inverted for prestige removal?
			max = -10
		}
		add_character_modifier = {
			name = scared_off_prospectors
			duration = 365	# decision disabled for 2 years, anywhere in demesne
		}
	}
	# Slightly better variants: politely tell the prospectors the results are bad
	# Midas Touched, can actually convince the prospectors they preformed poorly and it was their fault
	option = {
		name = CTDOPTF_0421
		trigger = {
			AND = {
				NOT = {
					# Never possible with content trait
					trait = content
				}
				trait = midas_touched
			}
		}
		tooltip_info = midas_touched
		# Gives back most of gold and also some prestige
		wealth = 40
		prestige = 20
		# This option is the only one that does not disable new prospection!!
	}
	# Fortune Builder, convinces the prospectors they preformed poorly and they don't get angry
	option = {
		name = CTDOPTG_0421
		trigger = {
			AND = {
				NOR = {
					trait = midas_touched
					# Never possible with content trait
					trait = content
				}
				trait = fortune_builder
			}
		}
		tooltip_info = fortune_builder
		# Gives back half of gold & a bit prestige
		wealth = 25
		prestige = 10
		event_target:target_prospected_province = {
			# Block new prospections, but only for this province:
			add_province_modifier = {
				name = unwanted_prospecting_results
				duration = 365	# 1 year
			}
		}
	}
	# Grey Eminence, convinces the prospectors they preformed poorly and they don't get angry
	option = {
		name = CTDOPTH_0421
		trigger = {
			AND = {
				NOR = {
					trait = midas_touched
					trait = fortune_builder
					# Never possible with content trait
					trait = content
				}
				trait = grey_eminence
			}
		}
		tooltip_info = grey_eminence
		# Gives back half of gold & a bit prestige
		wealth = 25
		prestige = 10
		event_target:target_prospected_province = {
			# Block new prospections, but only for this province:
			add_province_modifier = {
				name = unwanted_prospecting_results
				duration = 365	# 1 year
			}
		}
	}
	# Administrator, explains that results do not fit his plans but prospectors care little
	option = {
		name = CTDOPTI_0421
		trigger = {
			AND = {
				NOR = {
					trait = midas_touched
					trait = fortune_builder
					trait = grey_eminence
					# Never possible with content trait
					trait = content
				}
				trait = administrator
			}
		}
		tooltip_info = administrator
		# Gives back a bit of gold
		wealth = 10
		event_target:target_prospected_province = {
			# Block new prospections, but only for this province:
			add_province_modifier = {
				name = unwanted_prospecting_results
				duration = 365	# 1 year
			}
		}
	}
	
	# Crazy option, because lunatics don't care if anything they do makes any sense
	option = {
		name = CTDOPTJ_0421
		trigger = {
			trait = lunatic
		}
		tooltip_info = lunatic
		# Gives back all the gold at big prestige hit
		wealth = 50
		scaled_prestige = {	# 20% of annual prestige gain
			value = -0.20
			min = -500	# NOTE: Am I guessing correctly that the logic is inverted for prestige removal?
			max = -50
		}
		add_character_modifier = {
			name = scared_off_prospectors
			duration = 1825	# decision disabled for 5 years, anywhere in demesne
		}
	}
	
	# Afterwards (any option chosen): Clean up all the flags
	after = {
		event_target:target_prospected_province = {
			# this one is from the decision (spam-prevention):
			clr_province_flag = prospectors_sent
			# clear any newly prospected flags:
			# (don't worry, if prospecting was accepted there is now a modifier anyway)
			clr_province_flag = just_found_gold_ore
			clr_province_flag = just_found_placer_gold
			clr_province_flag = just_found_electrum
			clr_province_flag = just_found_chlorargyrite
			clr_province_flag = just_found_ruby_silver
			clr_province_flag = just_found_chalcopyrite
			clr_province_flag = just_found_chalcolite
			clr_province_flag = just_found_haematite
			clr_province_flag = just_found_magnetite
			clr_province_flag = just_found_pyrite
			clr_province_flag = just_found_casserite
			clr_province_flag = just_found_lead_glance
			clr_province_flag = just_found_gemstones
			clr_province_flag = just_found_lapis_lazuli
			clr_province_flag = just_found_malachite
			clr_province_flag = just_found_orpiment_realgar
			clr_province_flag = just_found_jade
			clr_province_flag = just_found_alum
			clr_province_flag = just_found_cinnabar
			clr_province_flag = just_found_sulfur_ore
			clr_province_flag = just_found_naphtha
			clr_province_flag = just_found_coal
			clr_province_flag = just_found_calamine
			clr_province_flag = just_found_smaltite
			clr_province_flag = just_found_antimonit
			clr_province_flag = just_found_pyrolusit
			clr_province_flag = just_found_sal_ammoniac
			clr_province_flag = just_found_marble
			clr_province_flag = just_found_stone
			clr_province_flag = just_found_limestone
			clr_province_flag = just_found_alabaster
			clr_province_flag = just_found_gypsum
			clr_province_flag = just_found_amber
			clr_province_flag = just_found_salt
			clr_province_flag = just_found_natural_brine
			clr_province_flag = just_found_soda
			clr_province_flag = just_found_sand
			clr_province_flag = just_found_clay
			clr_province_flag = just_found_borax
		}
	}
}


# ### Start slave trade

# ## Initial event to save all scopes as targets

# character_event = {	# Important to cache the scopes immediately, can't be done later!
	# id = CTD.0430
	# desc =  CTDDESC_0001		# Generic "invisible" localisation
	
	# is_triggered_only = yes		# by decision
	
	# hide_window = yes
	
	# immediate = {
		# # The great cacheing:
		# ROOT = {
			# save_event_target_as = target_slaver	# decison taker is enslaving
			# location = {	# IMPORTANT: Character must not have moved - safety check neccessary? Not sure, because the event happens immediately, but maybe...
				# save_event_target_as = target_enslaved_province	# province is enslaved
			# }
			# # Follow-up event reports back to decision taker and presents choices:
			# character_event = {
				# id = CTD.0431
			# }
		# }
	# }
# }

# character_event = {	# Chose an "origin" province for the new slaves
	# id = CTD.0431
	# desc =  CTDDESC_0431
	
	# is_triggered_only = yes		# by event
	
	# immediate = {
		# # Set temporary flags to differencate the potential origin provinces
		# event_target:target_enslaved_province = {
			# ROOT = {
				# # Flag 1:
				# random_demesne_province = {	# Must be within range of a "trade origin" designated province
					# limit = {
						# slave_origin_province_is_in_range_CTD_trigger = yes
					# }
					# # Set the temp flag:
					# set_province_flag = possible_new_slave_origin_province_1
				# }
				# # Flag 2 (check if possible now beforehand):
				# if = {
					# limit = {
						# any_demesne_province = {
							# AND = {
								# slave_origin_province_is_in_range_CTD_trigger = yes
								# NOT = {
									# has_province_flag = possible_new_slave_origin_province_1
								# }
							# }
						# }
					# }
					# random_demesne_province = {	# Must be within range of a "trade origin" designated province
						# limit = {
							# AND = {
								# slave_origin_province_is_in_range_CTD_trigger = yes
								# NOT = {
									# has_province_flag = possible_new_slave_origin_province_1
								# }
							# }
						# }
						# # Set the temp flag:
						# set_province_flag = possible_new_slave_origin_province_2
					# }
				# }
				# # Flag 3 (also check):
				# if = {
					# limit = {
						# any_demesne_province = {
							# AND = {
								# slave_origin_province_is_in_range_CTD_trigger = yes
								# NOR = {
									# has_province_flag = possible_new_slave_origin_province_1
									# has_province_flag = possible_new_slave_origin_province_2
								# }
							# }
						# }
					# }
					# random_demesne_province = {	# Must be within range of a "trade origin" designated province
						# limit = {
							# AND = {
								# slave_origin_province_is_in_range_CTD_trigger = yes
								# NOR = {
									# has_province_flag = possible_new_slave_origin_province_1
									# has_province_flag = possible_new_slave_origin_province_2
								# }
							# }
						# }
						# # Set the temp flag:
						# set_province_flag = possible_new_slave_origin_province_3
					# }
				# }
			# }
		# }
	# }
	
	# option = {	# First possible origin province
		# name = CTDOPTA_0431
		# trigger = {
			# any_demesne_province = {
				# has_province_flag = possible_new_slave_origin_province_1
			# }
		# }
		# # Set modifier & "abduct" (or import) slaves:
		# random_demesne_province = {
			# limit = {
				# has_province_flag = possible_new_slave_origin_province_1
			# }
			# remove_province_modifier = potential_slave_origin_province
			# add_province_modifier = {
				# name = slave_origin_province
				# days = -1
			# }
			# event_target:target_enslaved_province = {
				# abduct_enslaved_population_to_slavery_origin_province_CTD_effect = yes
			# }
		# }
		# # Clear the temp flags:
		# any_demesne_province = {
			# limit = {
				# OR = {
					# has_province_flag = possible_new_slave_origin_province_1
					# has_province_flag = possible_new_slave_origin_province_2
					# has_province_flag = possible_new_slave_origin_province_3
				# }
			# }
			# clr_province_flag = possible_new_slave_origin_province_1
			# clr_province_flag = possible_new_slave_origin_province_2
			# clr_province_flag = possible_new_slave_origin_province_3
		# }
		# # Important: Also remember the decision flag!
		# clr_character_flag = started_slave_hunt
	# }
	
	# option = {	# Second possible origin province
		# name = CTDOPTB_0431
		# trigger = {
			# any_demesne_province = {
				# has_province_flag = possible_new_slave_origin_province_2
			# }
		# }
		# # Set modifier & "abduct" (or import) slaves:
		# random_demesne_province = {
			# limit = {
				# has_province_flag = possible_new_slave_origin_province_2
			# }
			# remove_province_modifier = potential_slave_origin_province
			# add_province_modifier = {
				# name = slave_origin_province
				# days = -1
			# }
			# event_target:target_enslaved_province = {
				# abduct_enslaved_population_to_slavery_origin_province_CTD_effect = yes
			# }
		# }
		# # Clear the temp flags:
		# any_demesne_province = {
			# limit = {
				# OR = {
					# has_province_flag = possible_new_slave_origin_province_1
					# has_province_flag = possible_new_slave_origin_province_2
					# has_province_flag = possible_new_slave_origin_province_3
				# }
			# }
			# clr_province_flag = possible_new_slave_origin_province_1
			# clr_province_flag = possible_new_slave_origin_province_2
			# clr_province_flag = possible_new_slave_origin_province_3
		# }
		# # Important: Also remember the decision flag!
		# clr_character_flag = started_slave_hunt
	# }
	
	# option = {	# Third possible origin province
		# name = CTDOPTC_0431
		# trigger = {
			# any_demesne_province = {
				# has_province_flag = possible_new_slave_origin_province_3
			# }
		# }
		# # Set modifier & "abduct" (or import) slaves:
		# random_demesne_province = {
			# limit = {
				# has_province_flag = possible_new_slave_origin_province_3
			# }
			# remove_province_modifier = potential_slave_origin_province
			# add_province_modifier = {
				# name = slave_origin_province
				# days = -1
			# }
			# event_target:target_enslaved_province = {
				# abduct_enslaved_population_to_slavery_origin_province_CTD_effect = yes
			# }
		# }
		# # Clear the temp flags:
		# any_demesne_province = {
			# limit = {
				# OR = {
					# has_province_flag = possible_new_slave_origin_province_1
					# has_province_flag = possible_new_slave_origin_province_2
					# has_province_flag = possible_new_slave_origin_province_3
				# }
			# }
			# clr_province_flag = possible_new_slave_origin_province_1
			# clr_province_flag = possible_new_slave_origin_province_2
			# clr_province_flag = possible_new_slave_origin_province_3
		# }
		# # Important: Also remember the decision flag!
		# clr_character_flag = started_slave_hunt
	# }
# }
